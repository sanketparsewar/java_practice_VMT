package assignmentsVMT1;

import assignmentsVMT1.exceptionss.InvalidAgeException;
import assignmentsVMT1.exceptionss.InvalidEmailException;
import assignmentsVMT1.exceptionss.InvalidPasswordException;

public class School {
	private void homepage(User u) {
		System.out.println("Hello " + u.getuname());
		System.out.println("Your Data: ");
		System.out.println(u);
	}

	private RuntimeException verifyUser(User u) {
		
//------------------------------------------------------------------
//		//check Age
		if (!(u.getuage() >= 6))throw new InvalidAgeException("Age Should be not less than 6");
//-----------------------------------------------------------------------
		// Email
		// check Upper case in email
		for (int i = 65; i <= 90; i++) {
			if (u.getuemail().contains(Character.toString((char) i)))throw new InvalidEmailException("Uppercase Note allowed");
		}

		// check Special character except "@" in email
		if ((u.getuemail().contains(" ") ))
			throw new InvalidEmailException("Space not allowed");

		// check valid email endings
		if (!(u.getuemail().endsWith("@gmail.com") || u.getuemail().endsWith("@live.com")|| u.getuemail().endsWith("@outlook.com")))
			throw new InvalidEmailException("Invalid endings");

//---------------------------------------------------------------
		
//		check password
		// check length between 8 to 15 of password
		if (!(u.getupassword().length() >= 8 && u.getupassword().length() <= 15))throw new InvalidPasswordException("Invalid Length");

		// check at least 1 digit in password
		int count = 0;
		for (int i = 0; i <= 9; i++) {
			if (!u.getupassword().contains(Integer.toString(i))) count++;
		}
		
		// check at least 1 lower case in password
		for (int i = 65; i <= 90; i++) {
			if (!u.getupassword().contains(Character.toString((char) i)))count++;
		}

		// check at least 1 Upper case in password
		for (int i = 97; i <= 122; i++) {
			if (!u.getupassword().contains(Character.toString((char) i)))count++;
		}

		// check at least 1 special character in password
		if (!(u.getupassword().contains("@") || u.getupassword().contains("#") || u.getupassword().contains("!")
				|| u.getupassword().contains("~") || u.getupassword().contains("$") || u.getupassword().contains("%")
				|| u.getupassword().contains("^") || u.getupassword().contains("&") || u.getupassword().contains("*")
				|| u.getupassword().contains("(") || u.getupassword().contains(")") || u.getupassword().contains("-")
				|| u.getupassword().contains("+") || u.getupassword().contains("/") || u.getupassword().contains(":")
				|| u.getupassword().contains(".") || u.getupassword().contains(", ") || u.getupassword().contains("<")
				|| u.getupassword().contains(">") || u.getupassword().contains("?")
				|| u.getupassword().contains("|"))) count++;
		
		
		if (count == 0) throw new InvalidPasswordException();
		
		else return null;
		
	}

	public void login(User u) {
		RuntimeException re = verifyUser(u);
		if (re == null)
			homepage(u);
		else
		{System.out.println("program end");
			throw re;
		}
	}
}
